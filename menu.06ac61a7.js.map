{"mappings":"A,C,K,S,E,C,C,C,C,C,C,C,E,O,c,C,E,E,C,I,E,I,E,W,C,E,a,C,C,E,C,I,E,A,W,iB,C,E,E,Q,C,E,Q,S,C,C,C,E,E,E,O,C,U,I,G,I,E,E,QCEA,OAAM,EACL,aAAc,CACb,IAAI,CAAC,OAAO,CAAG,SAAS,aAAa,CAAC,kBACtC,IAAI,CAAC,MAAM,CAAG,SAAS,aAAa,CAAC,iBACrC,IAAI,CAAC,OAAO,CAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,WACnC,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,SAAU,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,GACjE,IAAI,CAAC,MAAM,CAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAC/B,IAAI,CAAC,IAAI,EACV,CAEA,MAAO,CACN,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAG,EACvB,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,OAAQ,UACjC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,gBAAiB,IAAI,CAAC,MAAM,EACrD,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,gBAAiB,gBAC1C,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,OAAQ,eACnC,CAEA,WAAW,CAAC,CAAE,CACb,IAAM,EAAU,MAAM,IAAI,CAAC,SAAS,gBAAgB,CAAC,WAErD,CAAA,IAAI,CAAC,MAAM,CAAG,AAAe,SAAf,EAAE,QAAQ,CACxB,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,gBAAiB,IAAI,CAAC,MAAM,EAEjD,GACH,CAAA,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,CAAG,AAAA,CAAA,EAAA,EAAA,YAAW,AAAX,EAAa,GAAW,CAAA,CAEtD,CACD,CAEI,SAAS,aAAa,CAAC,UAC1B,IAAI,EAGL,IAAA,EAAe,C,G,E,Q,S,C,C,C,E,E,E,O,C,mB,I,G,E,E,O,C,uB,I,G,E,E,O,C,iB,I,G,E,E,O,C,kB,I,G,E,E,O,C,kC,I,G,E,E,O,C,e,I,GCpCR,IAAM,EAAmB,AAAC,GACzB,EAAU,MAAM,CAAC,OAAO,CAAC,SAAS,CAG7B,EAAuB,AAAC,GAC7B,EAAU,MAAM,CAAC,OAAO,CAAC,IAAI,CAGxB,EAAiB,CAAC,EAAW,IACzC,AAAI,AAAgC,SAAhC,EAAiB,GACb,KAED,EAAS,IAAI,CAAC,AAAC,GAAO,EAAU,OAAO,CAAC,EAAI,QAGvC,EAAkB,CAAC,EAAM,KACrC,aAAa,OAAO,CAAC,EAAM,KAAK,SAAS,CAAC,GAC3C,EAEa,EAAkC,AAAC,GACxC,KAAK,KAAK,CAChB,aAAa,OAAO,CAAC,CAAC,EAAE,EAAU,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,GAIrD,EAAe,CAAC,CAAC,EAAU,EAAS,IAChD,IAAI,EAAW,CACd,iBAAiB,GAAU,MAAM,CACjC,iBAAiB,GAAU,MAAM,CACjC,CAMD,MAAO,AAJP,CAAA,EAAW,EAAS,GAAG,CAAC,AAAC,GACxB,AAAW,SAAX,EAAoB,EAAI,SAAS,GADlC,EAIgB,MAAM,CAAC,CAAC,EAAS,IAAY,KAAK,GAAG,CAAC,EAAS,GAChE,C,E,C","sources":["<anon>","src/assets/js/modules/menu.js","src/assets/js/modules/utils.js"],"sourcesContent":["(() => {\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    var parcelRequire = $parcel$global[\"parcelRequireb18d\"];\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"6N4re\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $4f1ac30b0dc41e46$export$2e2bcd8739ae039);\n\nvar $8GgXA = parcelRequire(\"8GgXA\");\nclass $4f1ac30b0dc41e46$var$Menu {\n    constructor(){\n        this.taskbar = document.querySelector(\".root__taskbar\");\n        this.toggle = document.querySelector(\".menu__toggle\");\n        this.details = this.toggle.closest(\"details\");\n        this.details.addEventListener(\"toggle\", this.toggleMenu.bind(this));\n        this.isOpen = this.details.open;\n        this.init();\n    }\n    init() {\n        this.toggle.tabIndex = 0;\n        this.toggle.setAttribute(\"role\", \"button\");\n        this.toggle.setAttribute(\"aria-expanded\", this.isOpen);\n        this.toggle.setAttribute(\"aria-controls\", \"menu-content\");\n        this.details.setAttribute(\"role\", \"presentation\");\n    }\n    toggleMenu(e) {\n        const windows = Array.from(document.querySelectorAll(\".window\"));\n        this.isOpen = e.newState === \"open\" ? true : false;\n        this.toggle.setAttribute(\"aria-expanded\", this.isOpen);\n        if (windows) this.taskbar.style.zIndex = (0, $8GgXA.getMaxZIndex)(windows) + 1;\n    }\n}\nif (document.querySelector(\".menu\")) new $4f1ac30b0dc41e46$var$Menu();\nvar $4f1ac30b0dc41e46$export$2e2bcd8739ae039 = $4f1ac30b0dc41e46$var$Menu;\n\n});\nparcelRegister(\"8GgXA\", function(module, exports) {\n\n$parcel$export(module.exports, \"getDraggableType\", () => $651f66e59bac466c$export$a928e70d6a30fd4c);\n$parcel$export(module.exports, \"getDraggableItemName\", () => $651f66e59bac466c$export$e3f114b3a81aa7ab);\n$parcel$export(module.exports, \"checkIfOverlap\", () => $651f66e59bac466c$export$c54a5cf0c37114c7);\n$parcel$export(module.exports, \"populateStorage\", () => $651f66e59bac466c$export$5cd1e178893711f6);\n$parcel$export(module.exports, \"getLastPositionFromLocalStorage\", () => $651f66e59bac466c$export$3bed5c89b8fe1fa6);\n$parcel$export(module.exports, \"getMaxZIndex\", () => $651f66e59bac466c$export$8e3ef38172163b4d);\nconst $651f66e59bac466c$export$a928e70d6a30fd4c = (draggable)=>{\n    return draggable.target.dataset.draggable;\n};\nconst $651f66e59bac466c$export$e3f114b3a81aa7ab = (draggable)=>{\n    return draggable.target.dataset.item;\n};\nconst $651f66e59bac466c$export$c54a5cf0c37114c7 = (draggable, elements)=>{\n    if ($651f66e59bac466c$export$a928e70d6a30fd4c(draggable) !== \"icon\") return null;\n    return elements.some((el)=>draggable.hitTest(el, \"25%\"));\n};\nconst $651f66e59bac466c$export$5cd1e178893711f6 = (item, value)=>{\n    localStorage.setItem(item, JSON.stringify(value));\n};\nconst $651f66e59bac466c$export$3bed5c89b8fe1fa6 = (draggable)=>{\n    return JSON.parse(localStorage.getItem(`${draggable.target.dataset.item}-position`));\n};\nconst $651f66e59bac466c$export$8e3ef38172163b4d = ([elementA, elementB])=>{\n    let zIndexes = [\n        getComputedStyle(elementA).zIndex,\n        getComputedStyle(elementB).zIndex\n    ];\n    zIndexes = zIndexes.map((zIndex)=>zIndex === \"auto\" ? 0 : parseInt(zIndex));\n    return zIndexes.reduce((zIndexA, zIndexB)=>Math.max(zIndexA, zIndexB));\n};\n\n});\n\n\n})();\n//# sourceMappingURL=menu.06ac61a7.js.map\n","import { getMaxZIndex } from './utils';\n\nclass Menu {\n\tconstructor() {\n\t\tthis.taskbar = document.querySelector('.root__taskbar');\n\t\tthis.toggle = document.querySelector('.menu__toggle');\n\t\tthis.details = this.toggle.closest('details');\n\t\tthis.details.addEventListener('toggle', this.toggleMenu.bind(this));\n\t\tthis.isOpen = this.details.open;\n\t\tthis.init();\n\t}\n\n\tinit() {\n\t\tthis.toggle.tabIndex = 0;\n\t\tthis.toggle.setAttribute('role', 'button');\n\t\tthis.toggle.setAttribute('aria-expanded', this.isOpen);\n\t\tthis.toggle.setAttribute('aria-controls', 'menu-content');\n\t\tthis.details.setAttribute('role', 'presentation');\n\t}\n\n\ttoggleMenu(e) {\n\t\tconst windows = Array.from(document.querySelectorAll('.window'));\n\n\t\tthis.isOpen = e.newState === 'open' ? true : false;\n\t\tthis.toggle.setAttribute('aria-expanded', this.isOpen);\n\n\t\tif (windows) {\n\t\t\tthis.taskbar.style.zIndex = getMaxZIndex(windows) + 1;\n\t\t}\n\t}\n}\n\nif (document.querySelector('.menu')) {\n\tnew Menu();\n}\n\nexport default Menu;\n","export const getDraggableType = (draggable) => {\n\treturn draggable.target.dataset.draggable;\n};\n\nexport const getDraggableItemName = (draggable) => {\n\treturn draggable.target.dataset.item;\n};\n\nexport const checkIfOverlap = (draggable, elements) => {\n\tif (getDraggableType(draggable) !== 'icon') {\n\t\treturn null;\n\t}\n\treturn elements.some((el) => draggable.hitTest(el, '25%'));\n};\n\nexport const populateStorage = (item, value) => {\n\tlocalStorage.setItem(item, JSON.stringify(value));\n};\n\nexport const getLastPositionFromLocalStorage = (draggable) => {\n\treturn JSON.parse(\n\t\tlocalStorage.getItem(`${draggable.target.dataset.item}-position`)\n\t);\n};\n\nexport const getMaxZIndex = ([elementA, elementB]) => {\n\tlet zIndexes = [\n\t\tgetComputedStyle(elementA).zIndex,\n\t\tgetComputedStyle(elementB).zIndex,\n\t];\n\n\tzIndexes = zIndexes.map((zIndex) =>\n\t\tzIndex === 'auto' ? 0 : parseInt(zIndex)\n\t);\n\n\treturn zIndexes.reduce((zIndexA, zIndexB) => Math.max(zIndexA, zIndexB));\n};\n"],"names":["$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","parcelRequire","$parcel$global","globalThis","parcelRegister","register","module","exports","$4f1ac30b0dc41e46$export$2e2bcd8739ae039","$8GgXA","$4f1ac30b0dc41e46$var$Menu","constructor","taskbar","document","querySelector","toggle","details","closest","addEventListener","toggleMenu","bind","isOpen","open","init","tabIndex","setAttribute","windows","Array","from","querySelectorAll","newState","style","zIndex","getMaxZIndex","$651f66e59bac466c$export$a928e70d6a30fd4c","$651f66e59bac466c$export$e3f114b3a81aa7ab","$651f66e59bac466c$export$c54a5cf0c37114c7","$651f66e59bac466c$export$5cd1e178893711f6","$651f66e59bac466c$export$3bed5c89b8fe1fa6","$651f66e59bac466c$export$8e3ef38172163b4d","draggable","target","dataset","item","elements","some","el","hitTest","value","localStorage","setItem","JSON","stringify","parse","getItem","elementA","elementB","zIndexes","getComputedStyle","map","parseInt","reduce","zIndexA","zIndexB","Math","max"],"version":3,"file":"menu.06ac61a7.js.map"}