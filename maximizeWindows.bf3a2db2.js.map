{"mappings":"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","sources":["<anon>","src/assets/js/modules/maximizeWindows.js","src/assets/js/modules/utils.js"],"sourcesContent":["(function () {\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global =\n        typeof globalThis !== 'undefined'\n          ? globalThis\n          : typeof self !== 'undefined'\n          ? self\n          : typeof window !== 'undefined'\n          ? window\n          : typeof global !== 'undefined'\n          ? global\n          : {};\n  var parcelRequire = $parcel$global[\"parcelRequireb18d\"];\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"gK1GM\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", function () { return $c30240a36bde7203$export$2e2bcd8739ae039; });\n\nvar $cbNRq = parcelRequire(\"cbNRq\");\nclass $c30240a36bde7203$var$MaximizeWindows {\n    constructor(){\n        this.windows = Array.from(document.querySelectorAll(\".window\"));\n        this.settingsWindow = document.querySelector(\".window.popup\");\n        this.maximizeButtons = document.querySelectorAll(\".maximize-btn\");\n        this.mainWindowHook = document.querySelector(\"#main-hook\");\n        this.settingsWindowHook = document.querySelector(\"#settings-hook\");\n        this.init();\n    }\n    init() {\n        this.maximizeButtons.forEach((button)=>{\n            let listener = (0, $cbNRq.getStateBoolean)(button, \"data-listener\");\n            if (!listener) {\n                button.addEventListener(\"click\", this.handleMaximizeButtonClick.bind(this));\n                button.dataset.listener = \"true\";\n            }\n        });\n        this.windows.forEach((windowEl)=>windowEl.addEventListener(\"toggleminimize\", (e)=>this.toggleIconsVisibility(e.currentTarget, true)));\n        document.documentElement.addEventListener(\"settingstoggled\", this.updateSettingsFullscreenState.bind(this));\n    }\n    handleMaximizeButtonClick(e) {\n        const maximizeButton = e.currentTarget;\n        const windowEl = maximizeButton.closest(\".window\");\n        const isPressed = !(0, $cbNRq.getStateBoolean)(maximizeButton, \"aria-pressed\");\n        maximizeButton.setAttribute(\"aria-pressed\", isPressed);\n        windowEl.classList.toggle(\"fullscreen\");\n        windowEl.dispatchEvent(new Event(\"activewindow\"));\n        this.toggleIconsVisibility(windowEl);\n    }\n    toggleIconsVisibility(windowEl, event = false) {\n        let isMinimized = (0, $cbNRq.getStateBoolean)(windowEl, \"data-minimized\");\n        const isFullscreen = windowEl.classList.contains(\"fullscreen\");\n        const hook = windowEl === this.settingsWindow ? this.settingsWindowHook : this.mainWindowHook;\n        if (event) isMinimized = !isMinimized;\n        if (isFullscreen && !isMinimized) hook.classList.add(\"hide-icons\");\n        else hook.classList.remove(\"hide-icons\");\n    }\n    updateSettingsFullscreenState(e) {\n        const { isOpen: isOpen } = e.detail;\n        const isFullscreen = this.settingsWindow.classList.contains(\"fullscreen\");\n        if (!isOpen && isFullscreen) this.settingsWindowHook.classList.remove(\"hide-icons\");\n    }\n}\nvar $c30240a36bde7203$export$2e2bcd8739ae039 = $c30240a36bde7203$var$MaximizeWindows;\n\n});\nparcelRegister(\"cbNRq\", function(module, exports) {\n\n$parcel$export(module.exports, \"getDraggableType\", function () { return $8dfd306f90bd34b8$export$a928e70d6a30fd4c; });\n$parcel$export(module.exports, \"getDraggableItemName\", function () { return $8dfd306f90bd34b8$export$e3f114b3a81aa7ab; });\n$parcel$export(module.exports, \"checkIfOverlap\", function () { return $8dfd306f90bd34b8$export$c54a5cf0c37114c7; });\n$parcel$export(module.exports, \"populateStorage\", function () { return $8dfd306f90bd34b8$export$5cd1e178893711f6; });\n$parcel$export(module.exports, \"getLastPositionFromLocalStorage\", function () { return $8dfd306f90bd34b8$export$3bed5c89b8fe1fa6; });\n$parcel$export(module.exports, \"getMaxZIndex\", function () { return $8dfd306f90bd34b8$export$8e3ef38172163b4d; });\n$parcel$export(module.exports, \"getStateBoolean\", function () { return $8dfd306f90bd34b8$export$c7e90bd4419dea2d; });\n$parcel$export(module.exports, \"getCorrespondingTaskButton\", function () { return $8dfd306f90bd34b8$export$374724bc3663e8ea; });\n$parcel$export(module.exports, \"getCorrespondingWindow\", function () { return $8dfd306f90bd34b8$export$e5a3ff51a99818e7; });\n$parcel$export(module.exports, \"removeOutlineFromElement\", function () { return $8dfd306f90bd34b8$export$ced06d1ab8f0e6ee; });\n$parcel$export(module.exports, \"updatePageHookWindow\", function () { return $8dfd306f90bd34b8$export$34c7ad34b7918f3d; });\nconst $8dfd306f90bd34b8$export$a928e70d6a30fd4c = (draggable)=>{\n    return draggable.target.dataset.draggable;\n};\nconst $8dfd306f90bd34b8$export$e3f114b3a81aa7ab = (draggable)=>{\n    return draggable.target.dataset.item;\n};\nconst $8dfd306f90bd34b8$export$c54a5cf0c37114c7 = (draggable, elements)=>{\n    if ($8dfd306f90bd34b8$export$a928e70d6a30fd4c(draggable) !== \"icon\") return null;\n    elements = elements.filter((el)=>el.dataset.minimized !== \"true\");\n    return elements.some((el)=>draggable.hitTest(el, \"25%\"));\n};\nconst $8dfd306f90bd34b8$export$5cd1e178893711f6 = (item, value)=>{\n    localStorage.setItem(item, JSON.stringify(value));\n};\nconst $8dfd306f90bd34b8$export$3bed5c89b8fe1fa6 = (draggable)=>{\n    return JSON.parse(localStorage.getItem(`${draggable.target.dataset.item}-position`));\n};\nconst $8dfd306f90bd34b8$export$8e3ef38172163b4d = ([elementA, elementB])=>{\n    let zIndexes = [\n        getComputedStyle(elementA).zIndex,\n        getComputedStyle(elementB).zIndex\n    ];\n    zIndexes = zIndexes.map((zIndex)=>zIndex === \"auto\" ? 0 : parseInt(zIndex));\n    return zIndexes.reduce((zIndexA, zIndexB)=>Math.max(zIndexA, zIndexB));\n};\nconst $8dfd306f90bd34b8$export$c7e90bd4419dea2d = (el, stateAttr)=>{\n    return el.getAttribute(stateAttr) === \"true\" ? true : false;\n};\nconst $8dfd306f90bd34b8$export$374724bc3663e8ea = (windowEl)=>{\n    return document.querySelector(`#${windowEl.dataset.task}`);\n};\nconst $8dfd306f90bd34b8$export$e5a3ff51a99818e7 = (taskButton)=>{\n    return document.querySelector(`.window[data-task=\"${taskButton.id}\"]`);\n};\nconst $8dfd306f90bd34b8$export$ced06d1ab8f0e6ee = (element, isUsingMouse)=>{\n    if (isUsingMouse) {\n        element.classList.add(\"remove-outline\");\n        element.addEventListener(\"blur\", ()=>element.classList.remove(\"remove-outline\"), {\n            once: true\n        });\n    }\n};\nconst $8dfd306f90bd34b8$export$34c7ad34b7918f3d = (windowEl, isMinimized)=>{\n    const pageHook = document.querySelector(\"#page-hook\");\n    pageHook.removeAttribute(\"data-window-open\");\n    pageHook.removeAttribute(\"data-popup-open\");\n    if (!isMinimized) pageHook.setAttribute(`data-${windowEl.dataset.item}-open`, \"\");\n};\n\n});\n\n\n})();\n//# sourceMappingURL=maximizeWindows.bf3a2db2.js.map\n","import { getStateBoolean } from './utils';\n\nclass MaximizeWindows {\n\tconstructor() {\n\t\tthis.windows = Array.from(document.querySelectorAll('.window'));\n\t\tthis.settingsWindow = document.querySelector('.window.popup');\n\t\tthis.maximizeButtons = document.querySelectorAll('.maximize-btn');\n\t\tthis.mainWindowHook = document.querySelector('#main-hook');\n\t\tthis.settingsWindowHook = document.querySelector('#settings-hook');\n\t\tthis.init();\n\t}\n\n\tinit() {\n\t\tthis.maximizeButtons.forEach((button) => {\n\t\t\tlet listener = getStateBoolean(button, 'data-listener');\n\n\t\t\tif (!listener) {\n\t\t\t\tbutton.addEventListener(\n\t\t\t\t\t'click',\n\t\t\t\t\tthis.handleMaximizeButtonClick.bind(this)\n\t\t\t\t);\n\t\t\t\tbutton.dataset.listener = 'true';\n\t\t\t}\n\t\t});\n\n\t\tthis.windows.forEach((windowEl) =>\n\t\t\twindowEl.addEventListener('toggleminimize', (e) =>\n\t\t\t\tthis.toggleIconsVisibility(e.currentTarget, true)\n\t\t\t)\n\t\t);\n\n\t\tdocument.documentElement.addEventListener(\n\t\t\t'settingstoggled',\n\t\t\tthis.updateSettingsFullscreenState.bind(this)\n\t\t);\n\t}\n\n\thandleMaximizeButtonClick(e) {\n\t\tconst maximizeButton = e.currentTarget;\n\t\tconst windowEl = maximizeButton.closest('.window');\n\t\tconst isPressed = !getStateBoolean(maximizeButton, 'aria-pressed');\n\n\t\tmaximizeButton.setAttribute('aria-pressed', isPressed);\n\n\t\twindowEl.classList.toggle('fullscreen');\n\t\twindowEl.dispatchEvent(new Event('activewindow'));\n\n\t\tthis.toggleIconsVisibility(windowEl);\n\t}\n\n\ttoggleIconsVisibility(windowEl, event = false) {\n\t\tlet isMinimized = getStateBoolean(windowEl, 'data-minimized');\n\t\tconst isFullscreen = windowEl.classList.contains('fullscreen');\n\t\tconst hook =\n\t\t\twindowEl === this.settingsWindow\n\t\t\t\t? this.settingsWindowHook\n\t\t\t\t: this.mainWindowHook;\n\n\t\tif (event) {\n\t\t\tisMinimized = !isMinimized;\n\t\t}\n\n\t\tif (isFullscreen && !isMinimized) {\n\t\t\thook.classList.add('hide-icons');\n\t\t} else {\n\t\t\thook.classList.remove('hide-icons');\n\t\t}\n\t}\n\n\tupdateSettingsFullscreenState(e) {\n\t\tconst { isOpen } = e.detail;\n\t\tconst isFullscreen = this.settingsWindow.classList.contains('fullscreen');\n\n\t\tif (!isOpen && isFullscreen) {\n\t\t\tthis.settingsWindowHook.classList.remove('hide-icons');\n\t\t}\n\t}\n}\n\nexport default MaximizeWindows;\n","export const getDraggableType = (draggable) => {\n\treturn draggable.target.dataset.draggable;\n};\n\nexport const getDraggableItemName = (draggable) => {\n\treturn draggable.target.dataset.item;\n};\n\nexport const checkIfOverlap = (draggable, elements) => {\n\tif (getDraggableType(draggable) !== 'icon') {\n\t\treturn null;\n\t}\n\n\telements = elements.filter((el) => el.dataset.minimized !== 'true');\n\treturn elements.some((el) => draggable.hitTest(el, '25%'));\n};\n\nexport const populateStorage = (item, value) => {\n\tlocalStorage.setItem(item, JSON.stringify(value));\n};\n\nexport const getLastPositionFromLocalStorage = (draggable) => {\n\treturn JSON.parse(\n\t\tlocalStorage.getItem(`${draggable.target.dataset.item}-position`)\n\t);\n};\n\nexport const getMaxZIndex = ([elementA, elementB]) => {\n\tlet zIndexes = [\n\t\tgetComputedStyle(elementA).zIndex,\n\t\tgetComputedStyle(elementB).zIndex,\n\t];\n\n\tzIndexes = zIndexes.map((zIndex) =>\n\t\tzIndex === 'auto' ? 0 : parseInt(zIndex)\n\t);\n\n\treturn zIndexes.reduce((zIndexA, zIndexB) => Math.max(zIndexA, zIndexB));\n};\n\nexport const getStateBoolean = (el, stateAttr) => {\n\treturn el.getAttribute(stateAttr) === 'true' ? true : false;\n};\n\nexport const getCorrespondingTaskButton = (windowEl) => {\n\treturn document.querySelector(`#${windowEl.dataset.task}`);\n};\n\nexport const getCorrespondingWindow = (taskButton) => {\n\treturn document.querySelector(`.window[data-task=\"${taskButton.id}\"]`);\n};\n\nexport const removeOutlineFromElement = (element, isUsingMouse) => {\n\tif (isUsingMouse) {\n\t\telement.classList.add('remove-outline');\n\t\telement.addEventListener(\n\t\t\t'blur',\n\t\t\t() => element.classList.remove('remove-outline'),\n\t\t\t{ once: true }\n\t\t);\n\t}\n};\n\nexport const updatePageHookWindow = (windowEl, isMinimized) => {\n\tconst pageHook = document.querySelector('#page-hook');\n\n\tpageHook.removeAttribute('data-window-open');\n\tpageHook.removeAttribute('data-popup-open');\n\n\tif (!isMinimized) {\n\t\tpageHook.setAttribute(`data-${windowEl.dataset.item}-open`, '');\n\t}\n};\n"],"names":["$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","parcelRequire","$parcel$global","globalThis","self","window","global","parcelRegister","register","module","exports","$c30240a36bde7203$export$2e2bcd8739ae039","$cbNRq","constructor","windows","Array","from","document","querySelectorAll","settingsWindow","querySelector","maximizeButtons","mainWindowHook","settingsWindowHook","init","forEach","button","getStateBoolean","addEventListener","handleMaximizeButtonClick","bind","dataset","listener","windowEl","toggleIconsVisibility","currentTarget","documentElement","updateSettingsFullscreenState","maximizeButton","closest","isPressed","setAttribute","classList","toggle","dispatchEvent","Event","event","isMinimized","isFullscreen","contains","hook","add","remove","isOpen","detail","$8dfd306f90bd34b8$export$a928e70d6a30fd4c","$8dfd306f90bd34b8$export$e3f114b3a81aa7ab","$8dfd306f90bd34b8$export$c54a5cf0c37114c7","$8dfd306f90bd34b8$export$5cd1e178893711f6","$8dfd306f90bd34b8$export$3bed5c89b8fe1fa6","$8dfd306f90bd34b8$export$8e3ef38172163b4d","$8dfd306f90bd34b8$export$c7e90bd4419dea2d","$8dfd306f90bd34b8$export$374724bc3663e8ea","$8dfd306f90bd34b8$export$e5a3ff51a99818e7","$8dfd306f90bd34b8$export$ced06d1ab8f0e6ee","$8dfd306f90bd34b8$export$34c7ad34b7918f3d","draggable","target","item","elements","filter","el","minimized","some","hitTest","value","localStorage","setItem","JSON","stringify","parse","getItem","elementA","elementB","zIndexes","getComputedStyle","zIndex","map","parseInt","reduce","zIndexA","zIndexB","Math","max","stateAttr","getAttribute","task","taskButton","id","element","isUsingMouse","once","pageHook","removeAttribute"],"version":3,"file":"maximizeWindows.bf3a2db2.js.map"}