{"mappings":"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","sources":["<anon>","src/assets/js/modules/minimizeWindows.js","src/assets/js/modules/utils.js"],"sourcesContent":["(function () {\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global =\n        typeof globalThis !== 'undefined'\n          ? globalThis\n          : typeof self !== 'undefined'\n          ? self\n          : typeof window !== 'undefined'\n          ? window\n          : typeof global !== 'undefined'\n          ? global\n          : {};\n  var parcelRequire = $parcel$global[\"parcelRequireb18d\"];\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"1FWyb\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", function () { return $138709a9744ef6cb$export$2e2bcd8739ae039; });\n\nvar $jsWSP = parcelRequire(\"jsWSP\");\n\nvar $cbNRq = parcelRequire(\"cbNRq\");\nclass $138709a9744ef6cb$var$MinimizeWindows {\n    constructor(){\n        this.windows = Array.from(document.querySelectorAll(\".window\"));\n        this.minimizeButtons = Array.from(document.querySelectorAll(\".minimize-btn\"));\n        this.init();\n    }\n    init() {\n        this.windows.forEach((windowEl)=>windowEl.addEventListener(\"toggleminimize\", this.toggleMinimize.bind(this)));\n        this.minimizeButtons.forEach((button)=>button.addEventListener(\"click\", this.handleMinimizeButtonClick.bind(this)));\n    }\n    createObserver(element) {\n        return new Promise((resolve, reject)=>{\n            const observer = new IntersectionObserver((entries, observer)=>{\n                let entry = entries[0];\n                resolve(entry.boundingClientRect);\n                observer.unobserve(element);\n            });\n            observer.observe(element);\n        });\n    }\n    getUntransformedBounds(element) {\n        return {\n            x: element.offsetLeft + element.offsetParent.offsetLeft,\n            y: element.offsetTop + element.offsetParent.offsetTop,\n            width: element.offsetWidth\n        };\n    }\n    getTransformValues(source, dest) {\n        return {\n            x: dest.x - source.x,\n            y: dest.y - source.y,\n            scale: (dest.width / source.width).toFixed(2)\n        };\n    }\n    toggleStates(elements, state) {\n        const pageHook = document.querySelector(\"#page-hook\");\n        elements.taskButton.setAttribute(\"aria-pressed\", !state.isPressed);\n        elements.windowEl.setAttribute(\"data-minimized\", !state.isMinimized);\n        if (!state.isMinimized) pageHook.removeAttribute(\"data-has-unminimized-window\");\n        else pageHook.setAttribute(\"data-has-unminimized-window\", \"\");\n    }\n    checkIfAnimationIsActive() {\n        let isActive = false;\n        if (this.minimizeTween && this.unminimizeTween) isActive = this.minimizeTween.isActive() || this.unminimizeTween.isActive();\n        return isActive;\n    }\n    async toggleMinimize(e) {\n        const isAnimationActive = this.checkIfAnimationIsActive();\n        if (isAnimationActive) return;\n        const { detail: detail } = e;\n        const { windowEl: windowEl, isPressed: isPressed } = detail;\n        const isMinimized = (0, $cbNRq.getStateBoolean)(windowEl, \"data-minimized\");\n        const taskButton = (0, $cbNRq.getCorrespondingTaskButton)(windowEl);\n        const taskButtonBounds = await this.createObserver(taskButton);\n        const transformedWindowBounds = await this.createObserver(windowEl);\n        const untransformedWindowBounds = this.getUntransformedBounds(windowEl);\n        const transformValues = {\n            minimizeValues: this.getTransformValues(untransformedWindowBounds, taskButtonBounds),\n            unminimizeValues: this.getTransformValues(untransformedWindowBounds, transformedWindowBounds)\n        };\n        if (isPressed && !isMinimized) {\n            this.minimize(windowEl, transformValues);\n            this.toggleStates({\n                taskButton: taskButton,\n                windowEl: windowEl\n            }, {\n                isPressed: isPressed,\n                isMinimized: isMinimized\n            });\n        } else {\n            this.unminimize(windowEl, transformValues);\n            this.toggleStates({\n                taskButton: taskButton,\n                windowEl: windowEl\n            }, {\n                isPressed: isPressed,\n                isMinimized: isMinimized\n            });\n            windowEl.dispatchEvent(new Event(\"mousedown\"));\n        }\n        taskButton.focus();\n    }\n    createTweenOptions({ values: values, duration: duration = 0.3, autoAlpha: autoAlpha = 0, clearProps: clearProps = null }) {\n        return {\n            duration: duration,\n            x: values.x,\n            y: values.y,\n            scaleX: values.scale ? values.scale : 1,\n            scaleY: values.scale ? values.scale : 1,\n            transformOrigin: \"left top\",\n            autoAlpha: autoAlpha,\n            clearProps: clearProps ? clearProps : \"clip-path\",\n            onStart: ()=>document.documentElement.setAttribute(\"data-animating\", \"\"),\n            onComplete: ()=>document.documentElement.removeAttribute(\"data-animating\")\n        };\n    }\n    minimize(windowEl, transformValues) {\n        const { minimizeValues: minimizeValues } = transformValues;\n        const initialStyle = windowEl.getAttribute(\"style\");\n        const prefersReducedMotion = window.matchMedia(`(prefers-reduced-motion: reduce)`) === true || window.matchMedia(`(prefers-reduced-motion: reduce)`).matches === true;\n        if (!prefersReducedMotion) {\n            this.minimizeTween = (0, $jsWSP.default).to(windowEl, this.createTweenOptions({\n                values: minimizeValues,\n                clearProps: \"all\"\n            }));\n            this.minimizeTween.play().then(()=>{\n                windowEl.setAttribute(\"style\", initialStyle);\n                windowEl.style.visibility = \"hidden\";\n            });\n        }\n    }\n    unminimize(windowEl, transformValues) {\n        const { minimizeValues: minimizeValues, unminimizeValues: unminimizeValues } = transformValues;\n        const prefersReducedMotion = window.matchMedia(`(prefers-reduced-motion: reduce)`) === true || window.matchMedia(`(prefers-reduced-motion: reduce)`).matches === true;\n        if (!prefersReducedMotion) this.unminimizeTween = (0, $jsWSP.default).timeline().to(windowEl, this.createTweenOptions({\n            values: minimizeValues,\n            duration: 0\n        })).to(windowEl, this.createTweenOptions({\n            values: unminimizeValues,\n            duration: 0.3,\n            autoAlpha: 1\n        }));\n    }\n    handleMinimizeButtonClick(e) {\n        const minimizeButton = e.currentTarget;\n        const isUsingMouse = e.pageX ? true : false;\n        const windowEl = minimizeButton.closest(\".window\");\n        const taskButton = (0, $cbNRq.getCorrespondingTaskButton)(windowEl);\n        const isPressed = !(0, $cbNRq.getStateBoolean)(taskButton);\n        (0, $cbNRq.removeOutlineFromElement)(taskButton, isUsingMouse);\n        windowEl.dispatchEvent(new CustomEvent(\"toggleminimize\", {\n            detail: {\n                windowEl: windowEl,\n                isPressed: isPressed\n            }\n        }));\n    }\n}\nnew $138709a9744ef6cb$var$MinimizeWindows();\nvar $138709a9744ef6cb$export$2e2bcd8739ae039 = $138709a9744ef6cb$var$MinimizeWindows;\n\n});\nparcelRegister(\"cbNRq\", function(module, exports) {\n\n$parcel$export(module.exports, \"getDraggableType\", function () { return $8dfd306f90bd34b8$export$a928e70d6a30fd4c; });\n$parcel$export(module.exports, \"getDraggableItemName\", function () { return $8dfd306f90bd34b8$export$e3f114b3a81aa7ab; });\n$parcel$export(module.exports, \"checkIfOverlap\", function () { return $8dfd306f90bd34b8$export$c54a5cf0c37114c7; });\n$parcel$export(module.exports, \"populateStorage\", function () { return $8dfd306f90bd34b8$export$5cd1e178893711f6; });\n$parcel$export(module.exports, \"getLastPositionFromLocalStorage\", function () { return $8dfd306f90bd34b8$export$3bed5c89b8fe1fa6; });\n$parcel$export(module.exports, \"getMaxZIndex\", function () { return $8dfd306f90bd34b8$export$8e3ef38172163b4d; });\n$parcel$export(module.exports, \"getStateBoolean\", function () { return $8dfd306f90bd34b8$export$c7e90bd4419dea2d; });\n$parcel$export(module.exports, \"getCorrespondingTaskButton\", function () { return $8dfd306f90bd34b8$export$374724bc3663e8ea; });\n$parcel$export(module.exports, \"getCorrespondingWindow\", function () { return $8dfd306f90bd34b8$export$e5a3ff51a99818e7; });\n$parcel$export(module.exports, \"removeOutlineFromElement\", function () { return $8dfd306f90bd34b8$export$ced06d1ab8f0e6ee; });\nconst $8dfd306f90bd34b8$export$a928e70d6a30fd4c = (draggable)=>{\n    return draggable.target.dataset.draggable;\n};\nconst $8dfd306f90bd34b8$export$e3f114b3a81aa7ab = (draggable)=>{\n    return draggable.target.dataset.item;\n};\nconst $8dfd306f90bd34b8$export$c54a5cf0c37114c7 = (draggable, elements)=>{\n    if ($8dfd306f90bd34b8$export$a928e70d6a30fd4c(draggable) !== \"icon\") return null;\n    elements = elements.filter((el)=>el.dataset.minimized !== \"true\");\n    return elements.some((el)=>draggable.hitTest(el, \"25%\"));\n};\nconst $8dfd306f90bd34b8$export$5cd1e178893711f6 = (item, value)=>{\n    localStorage.setItem(item, JSON.stringify(value));\n};\nconst $8dfd306f90bd34b8$export$3bed5c89b8fe1fa6 = (draggable)=>{\n    return JSON.parse(localStorage.getItem(`${draggable.target.dataset.item}-position`));\n};\nconst $8dfd306f90bd34b8$export$8e3ef38172163b4d = ([elementA, elementB])=>{\n    let zIndexes = [\n        getComputedStyle(elementA).zIndex,\n        getComputedStyle(elementB).zIndex\n    ];\n    zIndexes = zIndexes.map((zIndex)=>zIndex === \"auto\" ? 0 : parseInt(zIndex));\n    return zIndexes.reduce((zIndexA, zIndexB)=>Math.max(zIndexA, zIndexB));\n};\nconst $8dfd306f90bd34b8$export$c7e90bd4419dea2d = (el, stateAttr)=>{\n    return el.getAttribute(stateAttr) === \"true\" ? true : false;\n};\nconst $8dfd306f90bd34b8$export$374724bc3663e8ea = (windowEl)=>{\n    return document.querySelector(`#${windowEl.dataset.task}`);\n};\nconst $8dfd306f90bd34b8$export$e5a3ff51a99818e7 = (taskButton)=>{\n    return document.querySelector(`.window[data-task=\"${taskButton.id}\"]`);\n};\nconst $8dfd306f90bd34b8$export$ced06d1ab8f0e6ee = (element, isUsingMouse)=>{\n    if (isUsingMouse) {\n        element.classList.add(\"remove-outline\");\n        element.addEventListener(\"blur\", ()=>element.classList.remove(\"remove-outline\"), {\n            once: true\n        });\n    }\n};\n\n});\n\n\n})();\n//# sourceMappingURL=minimizeWindows.e3f635fd.js.map\n","import gsap from 'gsap';\nimport {\n\tgetStateBoolean,\n\tgetCorrespondingTaskButton,\n\tremoveOutlineFromElement,\n} from './utils';\n\nclass MinimizeWindows {\n\tconstructor() {\n\t\tthis.windows = Array.from(document.querySelectorAll('.window'));\n\t\tthis.minimizeButtons = Array.from(\n\t\t\tdocument.querySelectorAll('.minimize-btn')\n\t\t);\n\t\tthis.init();\n\t}\n\n\tinit() {\n\t\tthis.windows.forEach((windowEl) =>\n\t\t\twindowEl.addEventListener(\n\t\t\t\t'toggleminimize',\n\t\t\t\tthis.toggleMinimize.bind(this)\n\t\t\t)\n\t\t);\n\n\t\tthis.minimizeButtons.forEach((button) =>\n\t\t\tbutton.addEventListener(\n\t\t\t\t'click',\n\t\t\t\tthis.handleMinimizeButtonClick.bind(this)\n\t\t\t)\n\t\t);\n\t}\n\n\tcreateObserver(element) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst observer = new IntersectionObserver((entries, observer) => {\n\t\t\t\tlet entry = entries[0];\n\t\t\t\tresolve(entry.boundingClientRect);\n\t\t\t\tobserver.unobserve(element);\n\t\t\t});\n\t\t\tobserver.observe(element);\n\t\t});\n\t}\n\n\tgetUntransformedBounds(element) {\n\t\treturn {\n\t\t\tx: element.offsetLeft + element.offsetParent.offsetLeft,\n\t\t\ty: element.offsetTop + element.offsetParent.offsetTop,\n\t\t\twidth: element.offsetWidth,\n\t\t};\n\t}\n\n\tgetTransformValues(source, dest) {\n\t\treturn {\n\t\t\tx: dest.x - source.x,\n\t\t\ty: dest.y - source.y,\n\t\t\tscale: (dest.width / source.width).toFixed(2),\n\t\t};\n\t}\n\n\ttoggleStates(elements, state) {\n\t\tconst pageHook = document.querySelector('#page-hook');\n\t\telements.taskButton.setAttribute('aria-pressed', !state.isPressed);\n\t\telements.windowEl.setAttribute('data-minimized', !state.isMinimized);\n\n\t\tif (!state.isMinimized) {\n\t\t\tpageHook.removeAttribute('data-has-unminimized-window');\n\t\t} else {\n\t\t\tpageHook.setAttribute('data-has-unminimized-window', '');\n\t\t}\n\t}\n\n\tcheckIfAnimationIsActive() {\n\t\tlet isActive = false;\n\n\t\tif (this.minimizeTween && this.unminimizeTween) {\n\t\t\tisActive =\n\t\t\t\tthis.minimizeTween.isActive() || this.unminimizeTween.isActive();\n\t\t}\n\n\t\treturn isActive;\n\t}\n\n\tasync toggleMinimize(e) {\n\t\tconst isAnimationActive = this.checkIfAnimationIsActive();\n\t\tif (isAnimationActive) return;\n\n\t\tconst { detail } = e;\n\t\tconst { windowEl, isPressed } = detail;\n\t\tconst isMinimized = getStateBoolean(windowEl, 'data-minimized');\n\t\tconst taskButton = getCorrespondingTaskButton(windowEl);\n\n\t\tconst taskButtonBounds = await this.createObserver(taskButton);\n\t\tconst transformedWindowBounds = await this.createObserver(windowEl);\n\t\tconst untransformedWindowBounds = this.getUntransformedBounds(windowEl);\n\n\t\tconst transformValues = {\n\t\t\tminimizeValues: this.getTransformValues(\n\t\t\t\tuntransformedWindowBounds,\n\t\t\t\ttaskButtonBounds\n\t\t\t),\n\t\t\tunminimizeValues: this.getTransformValues(\n\t\t\t\tuntransformedWindowBounds,\n\t\t\t\ttransformedWindowBounds\n\t\t\t),\n\t\t};\n\n\t\tif (isPressed && !isMinimized) {\n\t\t\tthis.minimize(windowEl, transformValues);\n\t\t\tthis.toggleStates({ taskButton, windowEl }, { isPressed, isMinimized });\n\t\t} else {\n\t\t\tthis.unminimize(windowEl, transformValues);\n\t\t\tthis.toggleStates({ taskButton, windowEl }, { isPressed, isMinimized });\n\t\t\twindowEl.dispatchEvent(new Event('mousedown'));\n\t\t}\n\n\t\ttaskButton.focus();\n\t}\n\n\tcreateTweenOptions({\n\t\tvalues,\n\t\tduration = 0.3,\n\t\tautoAlpha = 0,\n\t\tclearProps = null,\n\t}) {\n\t\treturn {\n\t\t\tduration,\n\t\t\tx: values.x,\n\t\t\ty: values.y,\n\t\t\tscaleX: values.scale ? values.scale : 1,\n\t\t\tscaleY: values.scale ? values.scale : 1,\n\t\t\ttransformOrigin: 'left top',\n\t\t\tautoAlpha,\n\t\t\tclearProps: clearProps ? clearProps : 'clip-path',\n\t\t\tonStart: () =>\n\t\t\t\tdocument.documentElement.setAttribute('data-animating', ''),\n\t\t\tonComplete: () =>\n\t\t\t\tdocument.documentElement.removeAttribute('data-animating'),\n\t\t};\n\t}\n\n\tminimize(windowEl, transformValues) {\n\t\tconst { minimizeValues } = transformValues;\n\t\tconst initialStyle = windowEl.getAttribute('style');\n\t\tconst prefersReducedMotion =\n\t\t\twindow.matchMedia(`(prefers-reduced-motion: reduce)`) === true ||\n\t\t\twindow.matchMedia(`(prefers-reduced-motion: reduce)`).matches === true;\n\n\t\tif (!prefersReducedMotion) {\n\t\t\tthis.minimizeTween = gsap.to(\n\t\t\t\twindowEl,\n\t\t\t\tthis.createTweenOptions({\n\t\t\t\t\tvalues: minimizeValues,\n\t\t\t\t\tclearProps: 'all',\n\t\t\t\t})\n\t\t\t);\n\n\t\t\tthis.minimizeTween.play().then(() => {\n\t\t\t\twindowEl.setAttribute('style', initialStyle);\n\t\t\t\twindowEl.style.visibility = 'hidden';\n\t\t\t});\n\t\t}\n\t}\n\n\tunminimize(windowEl, transformValues) {\n\t\tconst { minimizeValues, unminimizeValues } = transformValues;\n\t\tconst prefersReducedMotion =\n\t\t\twindow.matchMedia(`(prefers-reduced-motion: reduce)`) === true ||\n\t\t\twindow.matchMedia(`(prefers-reduced-motion: reduce)`).matches === true;\n\n\t\tif (!prefersReducedMotion) {\n\t\t\tthis.unminimizeTween = gsap\n\t\t\t\t.timeline()\n\t\t\t\t.to(\n\t\t\t\t\twindowEl,\n\t\t\t\t\tthis.createTweenOptions({\n\t\t\t\t\t\tvalues: minimizeValues,\n\t\t\t\t\t\tduration: 0,\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t\t.to(\n\t\t\t\t\twindowEl,\n\t\t\t\t\tthis.createTweenOptions({\n\t\t\t\t\t\tvalues: unminimizeValues,\n\t\t\t\t\t\tduration: 0.3,\n\t\t\t\t\t\tautoAlpha: 1,\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t}\n\t}\n\n\thandleMinimizeButtonClick(e) {\n\t\tconst minimizeButton = e.currentTarget;\n\t\tconst isUsingMouse = e.pageX ? true : false;\n\t\tconst windowEl = minimizeButton.closest('.window');\n\t\tconst taskButton = getCorrespondingTaskButton(windowEl);\n\t\tconst isPressed = !getStateBoolean(taskButton);\n\n\t\tremoveOutlineFromElement(taskButton, isUsingMouse);\n\t\twindowEl.dispatchEvent(\n\t\t\tnew CustomEvent('toggleminimize', { detail: { windowEl, isPressed } })\n\t\t);\n\t}\n}\n\nnew MinimizeWindows();\n\nexport default MinimizeWindows;\n","export const getDraggableType = (draggable) => {\n\treturn draggable.target.dataset.draggable;\n};\n\nexport const getDraggableItemName = (draggable) => {\n\treturn draggable.target.dataset.item;\n};\n\nexport const checkIfOverlap = (draggable, elements) => {\n\tif (getDraggableType(draggable) !== 'icon') {\n\t\treturn null;\n\t}\n\n\telements = elements.filter((el) => el.dataset.minimized !== 'true');\n\treturn elements.some((el) => draggable.hitTest(el, '25%'));\n};\n\nexport const populateStorage = (item, value) => {\n\tlocalStorage.setItem(item, JSON.stringify(value));\n};\n\nexport const getLastPositionFromLocalStorage = (draggable) => {\n\treturn JSON.parse(\n\t\tlocalStorage.getItem(`${draggable.target.dataset.item}-position`)\n\t);\n};\n\nexport const getMaxZIndex = ([elementA, elementB]) => {\n\tlet zIndexes = [\n\t\tgetComputedStyle(elementA).zIndex,\n\t\tgetComputedStyle(elementB).zIndex,\n\t];\n\n\tzIndexes = zIndexes.map((zIndex) =>\n\t\tzIndex === 'auto' ? 0 : parseInt(zIndex)\n\t);\n\n\treturn zIndexes.reduce((zIndexA, zIndexB) => Math.max(zIndexA, zIndexB));\n};\n\nexport const getStateBoolean = (el, stateAttr) => {\n\treturn el.getAttribute(stateAttr) === 'true' ? true : false;\n};\n\nexport const getCorrespondingTaskButton = (windowEl) => {\n\treturn document.querySelector(`#${windowEl.dataset.task}`);\n};\n\nexport const getCorrespondingWindow = (taskButton) => {\n\treturn document.querySelector(`.window[data-task=\"${taskButton.id}\"]`);\n};\n\nexport const removeOutlineFromElement = (element, isUsingMouse) => {\n\tif (isUsingMouse) {\n\t\telement.classList.add('remove-outline');\n\t\telement.addEventListener(\n\t\t\t'blur',\n\t\t\t() => element.classList.remove('remove-outline'),\n\t\t\t{ once: true }\n\t\t);\n\t}\n};\n"],"names":["$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","parcelRequire","$parcel$global","globalThis","self","window","global","parcelRegister","register","module","exports","$138709a9744ef6cb$export$2e2bcd8739ae039","$jsWSP","$cbNRq","$138709a9744ef6cb$var$MinimizeWindows","constructor","windows","Array","from","document","querySelectorAll","minimizeButtons","init","forEach","windowEl","addEventListener","toggleMinimize","bind","button","handleMinimizeButtonClick","createObserver","element","Promise","resolve","reject","observer","IntersectionObserver","entries","entry","boundingClientRect","unobserve","observe","getUntransformedBounds","x","offsetLeft","offsetParent","y","offsetTop","width","offsetWidth","getTransformValues","source","dest","scale","toFixed","toggleStates","elements","state","pageHook","querySelector","taskButton","setAttribute","isPressed","isMinimized","removeAttribute","checkIfAnimationIsActive","isActive","minimizeTween","unminimizeTween","detail","getStateBoolean","getCorrespondingTaskButton","taskButtonBounds","transformedWindowBounds","untransformedWindowBounds","transformValues","minimizeValues","unminimizeValues","minimize","unminimize","dispatchEvent","Event","focus","createTweenOptions","values","duration","autoAlpha","clearProps","scaleX","scaleY","transformOrigin","onStart","documentElement","onComplete","initialStyle","getAttribute","matchMedia","matches","default","to","play","then","style","visibility","timeline","minimizeButton","currentTarget","isUsingMouse","pageX","closest","removeOutlineFromElement","CustomEvent","$8dfd306f90bd34b8$export$a928e70d6a30fd4c","$8dfd306f90bd34b8$export$e3f114b3a81aa7ab","$8dfd306f90bd34b8$export$c54a5cf0c37114c7","$8dfd306f90bd34b8$export$5cd1e178893711f6","$8dfd306f90bd34b8$export$3bed5c89b8fe1fa6","$8dfd306f90bd34b8$export$8e3ef38172163b4d","$8dfd306f90bd34b8$export$c7e90bd4419dea2d","$8dfd306f90bd34b8$export$374724bc3663e8ea","$8dfd306f90bd34b8$export$e5a3ff51a99818e7","$8dfd306f90bd34b8$export$ced06d1ab8f0e6ee","draggable","target","dataset","item","filter","el","minimized","some","hitTest","value","localStorage","setItem","JSON","stringify","parse","getItem","elementA","elementB","zIndexes","getComputedStyle","zIndex","map","parseInt","reduce","zIndexA","zIndexB","Math","max","stateAttr","task","id","classList","add","remove","once"],"version":3,"file":"minimizeWindows.e3f635fd.js.map"}